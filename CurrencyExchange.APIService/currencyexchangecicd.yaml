trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

stages:

- stage: Build
  displayName: "Build Application"

  jobs:
  - job: BuildDotnetApplication    
    steps:
    - task: DotNetCoreCLI@2
      displayName: "Restore Project"
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: "Test & Code coverage"
      inputs:
        command: test
        projects: '**/*Test.csproj'
        arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

    - task: DotNetCoreCLI@2
      displayName: "Build"
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
      
    - task: DotNetCoreCLI@2
      displayName: "Publish"
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
    
    - task: PublishPipelineArtifact@1
      displayName: "Publish Artifact"
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'CurrencyExchange'

- stage: PUblish
  displayName: "Publish Application"
  jobs:
  - job: BuildDotnetApplication    
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: "Download Artifact"
      inputs:
        artifactName: 'CurrencyExchange'
        targetPath: $(System.DefaultWorkingDirectory)
    
    - task: AzureWebApp@1
      displayName: "PUblish to WebApp"
      inputs:
        azureSubscription: 'svc-application-deployment'
        appName: 'RivertyCurrencyExchangeApi'
        package: '$(System.DefaultWorkingDirectory)/**/*.zip'