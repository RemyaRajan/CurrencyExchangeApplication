trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: "Build Application"
  jobs:
  - job: BuildApplication  
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js '

    - script: |
        ls
        npm install
      workingDirectory: '$(System.DefaultWorkingDirectory)/currencyexchangerclient'
      displayName: 'npm install'

    - script: |
        npm run build
      workingDirectory: '$(System.DefaultWorkingDirectory)/currencyexchangerclient'
      displayName: 'npm build'

    - task: ArchiveFiles@2
      displayName: "terraform file archive"
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/currencyexchangerclient/build'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: e2e-server
        targetPath: '$(Build.ArtifactStagingDirectory)'
        publishLocation: 'pipeline'
      displayName: 'Publish npm artifact'

- stage: Publish
  displayName: "Publish Application"
  jobs:
  - job: PublishApplication    
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: "Download Artifact"
      inputs:
        artifactName: 'e2e-server'
        targetPath: $(System.DefaultWorkingDirectory)
    
    - task: AzureWebApp@1
      displayName: "PUblish to WebApp"
      inputs:
        azureSubscription: 'svc-application-deployment'
        appName: 'RivertyCurrencyExchangeClient'
        package: '$(System.DefaultWorkingDirectory)/**/*.zip'